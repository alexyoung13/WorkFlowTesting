# on:
#   pull_request:

# jobs:
#   # approved:
#   #   if: github.event.review.state == 'approved'
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - run: echo "This PR was approved"
  
#   collab-check:
#     runs-on: ubuntu-latest
#     outputs: 
#       approval-env: ${{ steps.collab-check.outputs.result }}
#     steps:
#       - name: Collaborator Check
#         uses: actions/github-script@v7
#         id: collab-check
#         with:
#           result-encoding: string
#           script: | 
#             try {
#               const res = await github.rest.repos.checkCollaborator({
#                 owner: context.repo.owner,
#                 repo: context.repo.repo,
#                 username: "${{ github.event.pull_request.user.login }}",
#               });
#               console.log("Verifed ${{ github.event.pull_request.user.login }} is a repo collaborator. Auto Approving PR Checks.")
#               return res.status == "204" ? "auto-approve" : "manual-approval"
#             } catch (error) {
#               console.log("${{ github.event.pull_request.user.login }} is not a collaborator. Requiring Manual Approval to run PR Checks.")
#               console.log(error)
#               return "manual-approval"
#             }
#   wait-for-approval:
#     runs-on: ubuntu-latest
#     needs: [collab-check]
#     environment: ${{ needs.collab-check.outputs.approval-env }}
#     steps:
#       - run: echo "Workflow Approved! Starting PR Checks."
#   manual-approval:
#     runs-on: ubuntu-latest
#     permissions:
#       issues: write

#     steps:
#       - name: Await Manual Approval
#         uses: trstringer/manual-approval@v1
#         with:
#           secret: ${{ github.TOKEN }}
#           approvers: ${{ secrets.CODE_APPROVERS }}  # Replace with GitHub usernames, with the free version you can only have an issue assigned to one username
#           minimum-approvals: 1
#           issue-title: "Manual Approval Required for collab-check"
#           issue-body: "Please approve or deny the deployment."
on:
   pull_request_review:
     types: [submitted]
 
jobs:
   approved:
     if: github.event.review.state == 'approved'
     runs-on: ubuntu-latest
     steps:
       - run: echo "This PR was approved"
    tests:
      runs-on: ubuntu-latest
      needs: [approved]
      steps:
        - run: echo "Tests RUN!"
